import User from "../models/UserModel.js";
import jwt from "jsonwebtoken";
const maxAge = 3 * 24 * 60 * 60 * 1000;

//creates a token using user email and userid
const createToken = (email, userId) => {
    return jwt.sign({
        email,
        userId,
    }, process.env.JWT_KEY, {
        expiresIn: maxAge
    })
}

export const signUp = async (req, res, next) => {
    try {
        const {
            email,
            password
        } = req.body;
        if (!email || !password) {
            return res.status(400).send("Email and Password is required")
        }
        const user = await User.create({
            email,
            password
        })
        //creates a cookie named "jwt" that contains the jwt generated by the createToken function , sent with every request to the server, allowing for authenticated requests.
        res.cookie("jwt", createToken(email, user.id), {
            maxAge,
            secure: true,
            sameSite: "None"
        })

        return res.status(201).json({
            user: {
                id: user.id,
                email: user.email,
                profileSetup: user.profilesetup
            }
        })
    } catch (error) {
        console.log(error)
        return res.status(500).send("Internal Server Error")
    }
}